{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\codes\\\\project_med\\\\front-end\\\\src\\\\Bot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Bot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [awaitingDrugInfo, setAwaitingDrugInfo] = useState(false);\n  const [currentDrugName, setCurrentDrugName] = useState('');\n  const sendMessage = async () => {\n    if (userInput.trim() === \"\") return;\n    setMessages([...messages, {\n      text: userInput,\n      type: 'user'\n    }]);\n    if (awaitingDrugInfo) {\n      try {\n        const response = await axios.post('//get_drug_info', {\n          drug_name: currentDrugName,\n          info_type: userInput\n        });\n        setMessages([...messages, {\n          text: userInput,\n          type: 'user'\n        }, {\n          text: response.data.response,\n          type: 'bot'\n        }]);\n        setAwaitingDrugInfo(false);\n        setCurrentDrugName('');\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    } else {\n      try {\n        const response = await axios.post('/get_response', {\n          message: userInput\n        });\n        const newMessages = [...messages, {\n          text: userInput,\n          type: 'user'\n        }, {\n          text: response.data.response,\n          type: 'bot'\n        }];\n        setMessages(newMessages);\n        if (response.data.response.includes(\"Do you want uses or side effects?\")) {\n          setAwaitingDrugInfo(true);\n          setCurrentDrugName(userInput);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-icon\",\n      children: \"\\uD83D\\uDC8A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Drug Information Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      id: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: message.type,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"user-input\",\n      className: \"input-box\",\n      placeholder: \"Type your message here...\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      className: \"send-btn\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatApp, \"2T6qSE+ESb1ABa6DadsagW88yZk=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatApp","_s","userInput","setUserInput","messages","setMessages","awaitingDrugInfo","setAwaitingDrugInfo","currentDrugName","setCurrentDrugName","sendMessage","trim","text","type","response","post","drug_name","info_type","data","error","console","message","newMessages","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","index","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/codes/project_med/front-end/src/Bot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Bot.css'\r\n\r\nconst ChatApp = () => {\r\n    const [userInput, setUserInput] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [awaitingDrugInfo, setAwaitingDrugInfo] = useState(false);\r\n    const [currentDrugName, setCurrentDrugName] = useState('');\r\n\r\n    const sendMessage = async () => {\r\n        if (userInput.trim() === \"\") return;\r\n\r\n        setMessages([...messages, { text: userInput, type: 'user' }]);\r\n\r\n        if (awaitingDrugInfo) {\r\n            try {\r\n                const response = await axios.post('//get_drug_info', {\r\n                    drug_name: currentDrugName,\r\n                    info_type: userInput\r\n                });\r\n                setMessages([...messages, { text: userInput, type: 'user' }, { text: response.data.response, type: 'bot' }]);\r\n                setAwaitingDrugInfo(false);\r\n                setCurrentDrugName('');\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        } else {\r\n            try {\r\n                const response = await axios.post('/get_response', {\r\n                    message: userInput\r\n                });\r\n                const newMessages = [...messages, { text: userInput, type: 'user' }, { text: response.data.response, type: 'bot' }];\r\n                setMessages(newMessages);\r\n\r\n                if (response.data.response.includes(\"Do you want uses or side effects?\")) {\r\n                    setAwaitingDrugInfo(true);\r\n                    setCurrentDrugName(userInput);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        }\r\n\r\n        setUserInput('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-icon\">ðŸ’Š</div>\r\n            <h1>Drug Information Chatbot</h1>\r\n            <div className=\"chat-box\" id=\"chat-box\">\r\n                {messages.map((message, index) => (\r\n                    <p key={index} className={message.type}>{message.text}</p>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                id=\"user-input\"\r\n                className=\"input-box\"\r\n                placeholder=\"Type your message here...\"\r\n                value={userInput}\r\n                onChange={(e) => setUserInput(e.target.value)}\r\n            />\r\n            <button onClick={sendMessage} className=\"send-btn\">Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}